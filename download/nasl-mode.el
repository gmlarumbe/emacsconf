(defconst nasl--builtins
  '("HMAC_DSS"
    "HMAC_MD2"
    "HMAC_MD5"
    "HMAC_RIPEMD160"
    "HMAC_SHA"
    "HMAC_SHA1"
    "HMAC_SHA224"
    "HMAC_SHA256"
    "HMAC_SHA512"
    "MD2"
    "MD4"
    "MD5"
    "RIPEMD160"
    "SHA"
    "SHA1"
    "SHA224"
    "SHA256"
    "SHA512"
    "aes_cbc_decrypt"
    "aes_cbc_encrypt"
    "aes_cfb_decrypt"
    "aes_cfb_encrypt"
    "aes_ctr_decrypt"
    "aes_ctr_encrypt"
    "bf_cbc_decrypt"
    "bf_cbc_encrypt"
    "big_endian"
    "bind_sock_tcp"
    "bind_sock_tcp6"
    "bind_sock_udp"
    "bind_sock_udp6"
    "bn_add"
    "bn_cmp"
    "bn_dec2raw"
    "bn_div"
    "bn_exp"
    "bn_gcd"
    "bn_hex2raw"
    "bn_mod"
    "bn_mod_add"
    "bn_mod_exp"
    "bn_mod_mul"
    "bn_mod_sqr"
    "bn_mod_sub"
    "bn_mul"
    "bn_nnmod"
    "bn_random"
    "bn_raw2dec"
    "bn_raw2hex"
    "bn_sqr"
    "bn_sub"
    "bpf_close"
    "bpf_next"
    "bpf_open"
    "bsd_byte_ordering"
    "buffer_pick"
    "bzip2_compress"
    "bzip2_decompress"
    "ca_name"
    "can_query_report"
    "cfile_open"
    "cfile_stat"
    "cgibin"
    "chmod"
    "chomp"
    "close"
    "cn"
    "crap"
    "datalink"
    "db_close"
    "db_copy"
    "db_open"
    "db_query"
    "db_query_foreach"
    "debug_exit"
    "defined_func"
    "deflate_compress"
    "dh_compute_key"
    "dh_generate_key"
    "disable_all_plugins"
    "disable_plugin_family"
    "disable_plugin_id"
    "display"
    "dsa_do_sign"
    "dsa_do_verify"
    "dump_ctxt"
    "dump_interfaces"
    "dump_ip_packet"
    "dump_tcp_packet"
    "dump_udp_packet"
    "egrep"
    "enable_plugin_family"
    "enable_plugin_id"
    "end_denial"
    "ereg"
    "ereg_replace"
    "eregmatch"
    "exit"
    "file_close"
    "file_fstat"
    "file_is_signed"
    "file_mtime"
    "file_open"
    "file_read"
    "file_seek"
    "file_stat"
    "file_write"
    "fill_list"
    "find_in_path"
    "forge_icmp_packet"
    "forge_igmp_packet"
    "forge_ip_packet"
    "forge_tcp_packet"
    "forge_udp_packet"
    "fork"
    "fread"
    "func_has_arg"
    "fwrite"
    "get_cert_dname"
    "get_global_kb_item"
    "get_global_kb_list"
    "get_global_var"
    "get_gw_mac_addr"
    "get_host_ip"
    "get_host_name"
    "get_host_open_port"
    "get_host_raw_ip"
    "get_icmp_element"
    "get_ip_element"
    "get_kb_fresh_item"
    "get_kb_item"
    "get_kb_list"
    "get_local_ifaces"
    "get_local_mac_addr"
    "get_local_mac_addrs"
    "get_peer_name"
    "get_port_state"
    "get_port_transport"
    "get_preference"
    "get_sock_name"
    "get_source_port"
    "get_tcp_element"
    "get_tcp_port_state"
    "get_tmp_dir"
    "get_udp_element"
    "get_udp_port_state"
    "get_var"
    "getlocaltimezone"
    "getpid"
    "gettimeofday"
    "gettimezones"
    "gzip_compress"
    "gzip_deflate"
    "gzip_deflate_end"
    "gzip_deflate_init"
    "hex"
    "hexstr"
    "htmlparse"
    "http_close_socket"
    "http_delete"
    "http_get"
    "http_head"
    "http_open_socket"
    "http_post"
    "http_put"
    "inject_packet"
    "insert_ip_options"
    "insstr"
    "int"
    "ipsort"
    "is_cgi_installed"
    "is_ipv6"
    "is_user_root"
    "islocalhost"
    "islocalnet"
    "isnull"
    "join_multicast_group"
    "jpeg_image"
    "keys"
    "kill"
    "leave_multicast_group"
    "link_layer"
    "load_db_master_key_cli"
    "localtime"
    "localtime_tz"
    "location"
    "make_array"
    "make_list"
    "make_list2"
    "make_path"
    "match"
    "max_index"
    "mkcert"
    "mkdir"
    "mkdir_ex"
    "mktime"
    "mktime_tz"
    "mutex_lock"
    "mutex_unlock"
    "nasl_base64_decode"
    "nasl_base64_encode"
    "nasl_level"
    "nc_encode_array"
    "nc_encode_xml"
    "nessus_get_dir"
    "numsort"
    "open_priv_sock_tcp"
    "open_priv_sock_udp"
    "open_sock2"
    "open_sock_kdc"
    "open_sock_proxy"
    "open_sock_tcp"
    "open_sock_udp"
    "ord"
    "pcap_next"
    "pem_to_dsa"
    "pem_to_dsa2"
    "pem_to_rsa"
    "pem_to_rsa2"
    "pgrep"
    "platform"
    "platform_ptr_size"
    "pread"
    "preg"
    "preg_replace"
    "pregmatch"
    "prompt"
    "prompt_password"
    "query_report"
    "query_scratchpad"
    "rand"
    "raw_string"
    "readdir"
    "recv"
    "recv_line"
    "recvfrom"
    "rename"
    "replace_kb_item"
    "report_error"
    "report_mk_filter"
    "report_xml_tag"
    "report_xml_tag2"
    "resolv"
    "rm_kb_item"
    "rmdir"
    "routethrough"
    "rsa_private_decrypt"
    "rsa_private_encrypt"
    "rsa_public_decrypt"
    "rsa_public_encrypt"
    "rsa_sign"
    "safe_checks"
    "same_host"
    "scanner_add_port"
    "scanner_get_port"
    "scanner_status"
    "schematron_validate"
    "script_add_preference"
    "script_bugtraq_id"
    "script_category"
    "script_copyright"
    "script_cve_id"
    "script_dependencie"
    "script_dependencies"
    "script_description"
    "script_end_attributes"
    "script_exclude_keys"
    "script_family"
    "script_get_preference"
    "script_get_preference_file_content"
    "script_get_preference_file_location"
    "script_id"
    "script_name"
    "script_require_keys"
    "script_require_ports"
    "script_require_udp_ports"
    "script_set_attribute"
    "script_summary"
    "script_timeout"
    "script_version"
    "script_xref"
    "security_critical"
    "security_hole"
    "security_low"
    "security_note"
    "security_report"
    "security_report_with_attachments"
    "security_warning"
    "send"
    "send_capture"
    "send_packet"
    "sendto"
    "server_add_policy"
    "server_add_ticket"
    "server_add_user"
    "server_apply_filter_to_report"
    "server_authenticate"
    "server_autoregister"
    "server_copy_policy"
    "server_delete_policy"
    "server_delete_ticket"
    "server_delete_token"
    "server_delete_user"
    "server_distribution"
    "server_do_scan"
    "server_do_scan_as_user"
    "server_edit_ticket"
    "server_feed_type"
    "server_generate_token"
    "server_get_global_preferences"
    "server_get_load"
    "server_get_plugin_description"
    "server_get_plugin_list"
    "server_get_plugin_list_family"
    "server_get_plugin_list_matching_families"
    "server_get_plugin_preferences_list"
    "server_get_plugins_descriptions"
    "server_get_plugins_md5"
    "server_get_policy"
    "server_get_preferences"
    "server_get_status"
    "server_get_tickets"
    "server_import_nessus_file"
    "server_import_policy_nessus_file"
    "server_is_user_admin"
    "server_list_policies"
    "server_list_policies_summaries"
    "server_list_reports"
    "server_list_users"
    "server_loading_progress"
    "server_log"
    "server_master_unlock"
    "server_plugin_search_attributes"
    "server_plugin_search_matching_families"
    "server_plugin_search_matching_plugins"
    "server_query_report"
    "server_register"
    "server_rename_policy"
    "server_report_delete"
    "server_report_export"
    "server_report_get_host_list"
    "server_report_get_host_list2"
    "server_report_get_host_list_plugin"
    "server_report_get_kb"
    "server_report_get_port_details"
    "server_report_get_port_details2"
    "server_report_get_port_details_plugin"
    "server_report_get_port_list"
    "server_report_get_port_list2"
    "server_report_get_tags"
    "server_report_get_trail_details"
    "server_report_get_vuln_list2"
    "server_report_has_audit_trail"
    "server_report_has_kb"
    "server_report_import"
    "server_report_num_scan_errors"
    "server_report_regenerate"
    "server_report_scan_errors"
    "server_report_search_attributes"
    "server_restart"
    "server_scan_ctrl"
    "server_scan_get_status"
    "server_scan_list"
    "server_set_global_preferences"
    "server_token_release"
    "server_token_retain"
    "server_untar_plugins"
    "server_update_plugins"
    "server_user_chpasswd"
    "server_user_exists"
    "server_validate_token"
    "set_global_kb_item"
    "set_global_var"
    "set_ip_elements"
    "set_kb_item"
    "set_mem_limits"
    "set_tcp_elements"
    "set_udp_elements"
    "set_var"
    "shared_socket_acquire"
    "shared_socket_destroy"
    "shared_socket_register"
    "shared_socket_release"
    "shutdown"
    "sleep"
    "sock_accept"
    "socket_get_error"
    "socket_get_secure_renegotiation_support"
    "socket_negotiate_ssl"
    "socket_pending"
    "socket_ready"
    "socket_redo_ssl_handshake"
    "socket_reset_ssl"
    "socket_set_timeout"
    "socketpair"
    "sort"
    "split"
    "ssl_accept"
    "ssl_accept2"
    "ssl_accept3"
    "ssl_get_peer_name"
    "start_denial"
    "start_trace"
    "stop_trace"
    "str_replace"
    "strcat"
    "stridx"
    "string"
    "strlen"
    "strstr"
    "substr"
    "syn_scan"
    "tcp_ping"
    "tcp_scan"
    "this_host"
    "this_host_name"
    "this_host_raw"
    "thread_create"
    "tolower"
    "toupper"
    "tripledes_cbc_decrypt"
    "tripledes_cbc_encrypt"
    "typeof"
    "typeof_ex"
    "udp_scan"
    "uint"
    "unixtime"
    "unlink"
    "untar_plugins"
    "usleep"
    "wait"
    "xmldsig_sign"
    "xmldsig_verify"
    "xmlparse"
    "xmlrpc_set_encoding"
    "xsd_validate"
    "xslt_apply_stylesheet"
    "xslt_filter"
    "zlib_compress"
    "zlib_decompress"))

(defconst nasl--constants
  '("ACT_ATTACK"
    "ACT_COMPLIANCE_CHECK"
    "ACT_DENIAL"
    "ACT_DESTRUCTIVE_ATTACK"
    "ACT_END"
    "ACT_END2"
    "ACT_END_REPORT"
    "ACT_FLOOD"
    "ACT_GATHER_INFO"
    "ACT_INIT"
    "ACT_KILL_HOST"
    "ACT_MIXED_ATTACK"
    "ACT_PATCH_APPLY"
    "ACT_PATCH_POST_APPLY"
    "ACT_PATCH_SETUP"
    "ACT_SCANNER"
    "ACT_SETTINGS"
    "ACT_THIRD_PARTY_INFO"
    "AF_INET"
    "AF_INET6"
    "DB_ACL_ANALYZE"
    "DB_ACL_ATTACH"
    "DB_ACL_CREATE_VTABLE"
    "DB_ACL_DETACH"
    "DB_ACL_DROP_VTABLE"
    "DB_ACL_FUNCTION"
    "DB_ACL_SAVEPOINT"
    "DLT_EN10MB"
    "DLT_ENC"
    "DLT_FDDI"
    "DLT_IEEE802"
    "DLT_LINUX_SLL"
    "DLT_LOOP"
    "DLT_NULL"
    "DLT_PPP"
    "DLT_PPP_BSDOS"
    "DLT_PPP_ETHER"
    "DLT_PPP_SERIAL"
    "DLT_RAW"
    "DLT_SLIP"
    "DLT_SLIP_BSDOS"
    "DLT_UNKNOWN"
    "ECONNREFUSED"
    "ECONNRESET"
    "EINPROGRESS"
    "ENCAPS_IP"
    "ENCAPS_SSLv2"
    "ENCAPS_SSLv23"
    "ENCAPS_SSLv3"
    "ENCAPS_TLSv1"
    "ENCAPS_VERIFY_PEER"
    "ENOBUFS"
    "ESSL"
    "ETIMEDOUT"
    "EUNKNOWN"
    "EUNREACH"
    "FALSE"
    "IPPROTO_ICMP"
    "IPPROTO_IGMP"
    "IPPROTO_IP"
    "IPPROTO_TCP"
    "IPPROTO_UDP"
    "IP_DF"
    "IP_MF"
    "IP_OFFMASK"
    "IP_RF"
    "JCS_CMYK"
    "JCS_GRAYSCALE"
    "JCS_RGB"
    "JCS_UNKNOWN"
    "JCS_YCCK"
    "JCS_YCbCr"
    "LINE_NUMBER"
    "MSG_OOB"
    "NASL_LEVEL"
    "NC_ENCODE_JSON"
    "NC_ENCODE_RAW"
    "NC_ENCODE_XML"
    "NESSUS_3"
    "NOERR"
    "NULL"
    "N_AUDITS_DIR"
    "N_CA_PRIV_DIR"
    "N_CA_PUB_DIR"
    "N_CONF_DIR"
    "N_LOG_DIR"
    "N_PLUGIN_DIR"
    "N_REPORT_ENGINE_DIR"
    "N_STATE_DIR"
    "N_WWW_DIR"
    "SEEK_CUR"
    "SEEK_END"
    "SEEK_SET"
    "SHUT_RD"
    "SHUT_RDWR"
    "SHUT_WR"
    "TH_ACK"
    "TH_FIN"
    "TH_PUSH"
    "TH_RST"
    "TH_SYN"
    "TH_URG"
    "TRUE"
    "XMLRPC_CTRL_SCAN_PAUSE"
    "XMLRPC_CTRL_SCAN_RESUME"
    "XMLRPC_CTRL_SCAN_STOP"
    "XMLSEC_KEY_FORMAT_BINARY"
    "XMLSEC_KEY_FORMAT_CERT_DER"
    "XMLSEC_KEY_FORMAT_CERT_PEM"
    "XMLSEC_KEY_FORMAT_DER"
    "XMLSEC_KEY_FORMAT_PEM"
    "XMLSEC_KEY_FORMAT_PKCS12"
    "XMLSEC_KEY_FORMAT_PKCS8_DER"
    "XMLSEC_KEY_FORMAT_PKCS8_PEM"
    "XMLSEC_KEY_FORMAT_UNKNOWN"
    "XML_PARSE_BIG_LINES"
    "XML_PARSE_COMPACT"
    "XML_PARSE_DTDATTR"
    "XML_PARSE_DTDLOAD"
    "XML_PARSE_DTDVALID"
    "XML_PARSE_HUGE"
    "XML_PARSE_IGNORE_ENC"
    "XML_PARSE_NOBASEFIX"
    "XML_PARSE_NOBLANKS"
    "XML_PARSE_NOCDATA"
    "XML_PARSE_NODICT"
    "XML_PARSE_NOENT"
    "XML_PARSE_NOERROR"
    "XML_PARSE_NONET"
    "XML_PARSE_NOWARNING"
    "XML_PARSE_NOXINCNODE"
    "XML_PARSE_NSCLEAN"
    "XML_PARSE_OLD10"
    "XML_PARSE_OLDSAX"
    "XML_PARSE_PEDANTIC"
    "XML_PARSE_RECOVER"
    "XML_PARSE_SAX1"
    "XML_PARSE_XINCLUDE"
    "Z_DEFAULT_STRATEGY"
    "Z_FILTERED"
    "Z_HUFFMAN_ONLY"
    "Z_RLE"
    "pcap_timeout"))

(defconst nasl--keywords
  '("break"
    "continue"
    "else"
    "export"
    "for"
    "foreach"
    "function"
    "global_var"
    "if"
    "import"
    "in"
    "include"
    "local_var"
    "repeat"
    "return"
    "until"
    "while"))

(defconst nasl--regex-operators
  '("><" ">!<" "=~" "!~" "==" "!=" "<=" ">=" "=" "\+=" "-=" "\*=" "/=" "%=" ">>="
    ">>>=" "<<=" "||" "&&" "!" "|" "\\^" ">>>" ">>" "<<" "<" ">" "\+\+" "--"
    "\*\*" "\+" "-" "\*" "/" "%" "~" "\." "," ":" ";" "(" ")" "\[" "\]" "{" "}"
    "&" "@"))

(defconst nasl--regex-identifier
  "[_a-zA-Z][_a-zA-Z0-9]*")

(defun nasl--regexp-opt-word (re)
  (concat "\\<" (regexp-opt re) "\\>"))

(defun nasl--build-font-lock-keywords ()
  (append
   `(;; Literals
     ("\\<0x[0-9a-fA-F]+\\>" . font-lock-constant-face)
     ("\\<[0-9]+\\>" . font-lock-constant-face)

     ;; Language-defined keywords, variables, and functions
     (,(nasl--regexp-opt-word nasl--keywords) . font-lock-keyword-face)
     (,(concat "\\(" (nasl--regexp-opt-word nasl--builtins) "\\)\\s *(") 1 font-lock-builtin-face)
     (,(nasl--regexp-opt-word nasl--constants) . font-lock-constant-face)

     ;; User-defined variables and functions
     (,(concat "\\<\\(" nasl--regex-identifier "\\)\\s *(\\>") 1 font-lock-function-name-face)
     (,(concat "\\<" nasl--regex-identifier "\\>") . font-lock-variable-name-face)

     ;; Miscellaneous
     ("!" . font-lock-negation-char-face))))

(defvar nasl-mode-syntax-table
  (let ((st (make-syntax-table)))
    (modify-syntax-entry ?\# "<"  st)
    (modify-syntax-entry ?\n ">"  st)

    (modify-syntax-entry ?\( "()" st)
    (modify-syntax-entry ?\) ")(" st)
    (modify-syntax-entry ?\[ "(]" st)
    (modify-syntax-entry ?\] ")[" st)
    (modify-syntax-entry ?\{ "(}" st)
    (modify-syntax-entry ?\} "){" st)

    (modify-syntax-entry ?\% "."  st)
    (modify-syntax-entry ?\& "."  st)
    (modify-syntax-entry ?\* "."  st)
    (modify-syntax-entry ?\+ "."  st)
    (modify-syntax-entry ?\- "."  st)
    (modify-syntax-entry ?\/ "."  st)
    (modify-syntax-entry ?\< "."  st)
    (modify-syntax-entry ?\= "."  st)
    (modify-syntax-entry ?\> "."  st)
    (modify-syntax-entry ?\~ "."  st)
    (modify-syntax-entry ?\| "."  st)
    (modify-syntax-entry ?\! "."  st)
    (modify-syntax-entry ?\@ "."  st)
    (modify-syntax-entry ?\. "."  st)
    (modify-syntax-entry ?\, "."  st)

    (modify-syntax-entry ?\" "\"" st)
    (modify-syntax-entry ?\' "\"" st)

    (modify-syntax-entry ?\_ "w"  st)
    st))

(defvar nasl-mode-map
  (let ((mm (make-sparse-keymap)))
    mm))

(define-derived-mode nasl-mode prog-mode "NASL"
 "Support for the Nessus Attack Scripting Language."
 (set (make-local-variable 'font-lock-defaults) '(nasl--build-font-lock-keywords))
 (setq indent-tabs-mode nil))

(add-to-list 'auto-mode-alist (cons "\\.inc$" 'nasl-mode))
(add-to-list 'auto-mode-alist (cons "\\.nasl$" 'nasl-mode))

(provide 'nasl-mode)
